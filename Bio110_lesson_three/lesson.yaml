- Class: meta
  Course: Bio110
  Lesson: lesson_three
  Author: Paulette Bierzychudek
  Type: Standard
  Organization: Lewis & Clark College
  Version: 2.4.4

- Class: text
  Output: Welcome to Swirl lesson three, where you will learn the basics of graphing using boxplots. 

- Class: text
  Output: We will work with the physiology dataset, called data, that you have already seen. 

- Class: cmd_question
  Output: Type "data" for a reminder of the variables that it contains. 
  CorrectAnswer: data
  AnswerTests: omnitest(correctExpr='data')
  Hint: Type a hint.
  
- Class: text
  Output: R has a function called plot which makes a simple graph of the relationship between an independent and a dependent variable. 

- Class: text
  Output: When the independent variable is continuous, plot creates a scatterplot. When the independent variable is categorical, the plot command creates a boxplot. 

- Class: text
  Output: When data are in the form of numbers, R can treat them either as continuous (numeric variables, in R language) or as categorical (factor variables, in R language). 

- Class: text
  Output: In "data" the different measurements are categorized as having been made under either Anaerobic (1) or Aerobic (2) conditions. 

- Class: text
  Output: Suppose you wanted to create a graph that compared the respiratory quotients (RQ) under these two conditions. 

- Class: text
  Output: "The basic plot function has this form: plot(yourdata$xvariable, yourdata$yvariable). You would need to substitute the actual names for the dataset and variables used as place-holders here."

- Class: cmd_question
  Output: Use the plot function to graph the RQs of the two groups, anaerobic and aerobic.
  CorrectAnswer: plot(data$Anaerobic_Aerobic, data$RQ)
  AnswerTests: omnitest(correctExpr='plot(data$Anaerobic_Aerobic, data$RQ)')
  Hint: Remember that variable names are case-sensitive. 

- Class: text
  Output: Notice that R has created a scatterplot, and that it is treating the Anaerobic-Aerobic variable as continuous. The dots overlap and it is hard to see any differences between the two groups. A boxplot might be a better choice for these data. 

- Class: text
  Output: "If the Anaerobic_Aerobic variable were a factor variable, R would make a boxplot instead. We can tell R to treat this variable as a factor by writing: data$Anaerobic_Aerobic<-as.factor(data$Anaerobic_Aerobic)"

- Class: cmd_question
  Output: Try it for yourself. 
  CorrectAnswer: data$Anaerobic_Aerobic<-as.factor(data$Anaerobic_Aerobic)
  AnswerTests: omnitest(correctExpr='data$Anaerobic_Aerobic<-as.factor(data$Anaerobic_Aerobic)')
  Hint: Did you spell everything correctly?.

- Class: cmd_question
  Output: Now use the plotting command again. 
  CorrectAnswer: plot(data$Anaerobic_Aerobic, data$RQ)
  AnswerTests: omnitest(correctExpr='plot(data$Anaerobic_Aerobic, data$RQ)')
  Hint: 

- Class: text
  Output: When R understands that the Anaerobic_Aerobic variable is a factor or category, the "plot" command creates a boxplot. The horizontal bars represent the medians of each group. The boxes represent the interquartile range, i.e. the middle 50% of the data values.  

- Class: mult_question
  Output: In which condition is the respiratory quotient higher, anaerobic or aerobic? 
  AnswerChoices: anaerobic;aerobic
  CorrectAnswer: aerobic
  AnswerTests: omnitest(correctVal='aerobic')
  Hint: Remember that 1 represents the anaerobic condition and 2 represents the aerobic condition. 

- Class: text
  Output: This boxplot is not very easy to read because the labels are not very clear. We can change the plotting parameters to improve the appearance of the figure. 

- Class: text
  Output: The axis labels should be self-explanatory. We can change them adding the xlab='' and ylab='' "arguments" to the plot command. Because these labels are character strings (i.e. lists of letters), we need to enclose them in quotation marks. 

- Class: text
  Output: "You can do this by adding these terms to the plot command, within the parentheses. For example, you might write: plot(data$x, data$y, xlab='my x-axis label', ylab='my y-axis label')."

- Class: cmd_question
  Output: Try it yourself, with "condition" as the x-axis label, and "RQ" as the y-axis label. 
  CorrectAnswer: plot(data$Anaerobic_Aerobic, data$RQ, xlab="condition", ylab="RQ")
  AnswerTests: omnitest(correctExpr='plot(data$Anaerobic_Aerobic, data$RQ, xlab="condition", ylab="RQ")')
  Hint: Remember that text is case-sensitive.

- Class: text
  Output: "But the labels are still not completely clear. It would be much clearer to replace the 1 and 2 with the labels 'Anaerobic' and 'Aerobic.' You can do this by adding the names=c('category name1', 'category name2', etc.) argument to the plot command." 

- Class: cmd_question
  Output: Try it now, using "Anaerobic" for the first category, and "Aerobic" for the second one. Put the names command in front of the arguments for the axis labels. 
  CorrectAnswer: plot(data$Anaerobic_Aerobic, data$RQ, names=c("Anaerobic","Aerobic"), xlab="condition", ylab="RQ") 
  AnswerTests: omnitest(correctExpr='plot(data$Anaerobic_Aerobic, data$RQ, names=c("Anaerobic","Aerobic"), xlab="condition", ylab="RQ")')
  Hint: Remember that text is case-sensitive.

- Class: text
  Output: You might also want to use a wider range of values on the y-axis so that the figure has a little more elbow room. For example, the current y-axis starts at a RQ of -.10 and ends at a value of .15. Maybe you'd like it to range from -0.20 to 0.25 instead.  

- Class: text
  Output: "You can do this by inserting the 'ylim=c(lowerlimit, upperlimit)' argument into the plot command like this: plot(data$x, data$y, ylim=c(-.20, .25))" 

- Class: cmd_question
  Output: Try it now, adding new ylimits to the plot you have already created with category and axis labels. 
  CorrectAnswer: plot(data$Anaerobic_Aerobic, data$RQ, names=c("Anaerobic","Aerobic"), xlab="condition", ylab="RQ", ylim=c(-.20,.25)) 
  AnswerTests: omnitest(correctExpr='plot(data$Anaerobic_Aerobic, data$RQ, names=c("Anaerobic","Aerobic"), xlab="condition", ylab="RQ", ylim=c(-.20,.25))')
  Hint: Remember to put all text expressions in quotes. 
